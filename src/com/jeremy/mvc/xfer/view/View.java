/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.jeremy.mvc.xfer.view;

import com.jeremy.mvc.xfer.controller.Controller;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.beans.PropertyChangeEvent;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.AbstractAction;
import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;

/**
 *
 * @author Jeremy
 */
public class View extends AbstractView {
    
    private static final String IPPATTERN = 
        "^(([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}([01]?\\d\\d?|2[0-4]\\d|25[0-5])$";

    /**
     * Creates new form XferView
     * Sets the views controller
     */
    private Controller controller;
    Pattern ipPattern;
    
    public View(Controller controller) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            System.out.println(ex);
        }
        this.controller = controller;
        initComponents();
        localInitialization();
    }
    
    // <editor-fold defaultstate="collapsed" desc=" Local Initialization ">                          
    
    /**
     * Used to provide local initialization of Swing components outside of the
     * NetBeans auto code generator.
     */
    public void localInitialization() {
        newConnectionTxtField.setEnabled(false);
        int index = mainTabs.indexOfComponent(serverPanel);
        mainTabs.remove(index);
        this.setVisible(true); 
        
        ipPattern = Pattern.compile(IPPATTERN);
        newConnectionTxtField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                textDocumentChanged(e); 
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                textDocumentChanged(e); 
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                textDocumentChanged(e);                 
            }

        });
    }
    
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc=" Model Event Handling Code ">
    @Override
    public void modelPropertyChange(final PropertyChangeEvent evt) {
        
        switch(evt.getPropertyName()) {
            case Controller.CHOSEN_TABLE_MODEL:
                chosenFilesTable.setModel((DefaultTableModel)evt.getNewValue());
                chosenFilesTable.getColumn("File Name").setMaxWidth(160);
                chosenFilesTable.getColumn("Size").setMaxWidth(60);
                chosenFilesTable.getColumn("Directory").setMaxWidth(250);
                break;
            case Controller.SERVER_TABLE_MODEL:
                serverTable.setModel((DefaultTableModel)evt.getNewValue());
                TableColumn serverColumn = serverTable.getColumnModel().getColumn(3);
                serverColumn.setCellRenderer(new ProgressRenderer());
                break;
            case Controller.SENDING_TABLE_MODEL:
                sendingTable.setModel((DefaultTableModel)evt.getNewValue());
                TableColumn sendingColumn = sendingTable.getColumnModel().getColumn(3);
                sendingColumn.setCellRenderer(new ProgressRenderer());
                break;
            case Controller.UPDATE_SENDING_TABLE:
                newConnectionTxtField.setText("");
        }
    }
    // </editor-fold>  
    /**
     * This method is called from within the constructor to initialize the form. 
     * WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTabs = new javax.swing.JTabbedPane();
        serverPanel = new javax.swing.JPanel();
        serverTableScrollPane = new javax.swing.JScrollPane();
        serverTable = new javax.swing.JTable();
        subTabPanel = new javax.swing.JPanel();
        connectionTabs = new javax.swing.JTabbedPane();
        newConnectionPanel = new javax.swing.JPanel();
        newConnectionLbl = new javax.swing.JLabel();
        newConnectionFilesBtn = new javax.swing.JButton();
        newConnectionTableScrollPane = new javax.swing.JScrollPane();
        chosenFilesTable = new javax.swing.JTable();
        newConnectionTxtField = new javax.swing.JFormattedTextField();
        newConnectionBtn = new javax.swing.JButton();
        sendingPanel = new javax.swing.JPanel();
        sendingTableScrollPane = new javax.swing.JScrollPane();
        sendingTable = new javax.swing.JTable();
        menu = new javax.swing.JMenuBar();
        popup = new javax.swing.JMenu();
        popupItmServer = new javax.swing.JMenuItem();
        popupSeperator = new javax.swing.JPopupMenu.Separator();
        popupItmExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Xfer beta 0.01");
        setName("mainFrame"); // NOI18N
        setResizable(false);

        serverTableScrollPane.setEnabled(false);

        serverTable.setEnabled(false);
        serverTable.getTableHeader().setReorderingAllowed(false);
        serverTableScrollPane.setViewportView(serverTable);

        javax.swing.GroupLayout serverPanelLayout = new javax.swing.GroupLayout(serverPanel);
        serverPanel.setLayout(serverPanelLayout);
        serverPanelLayout.setHorizontalGroup(
            serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(serverTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
        );
        serverPanelLayout.setVerticalGroup(
            serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(serverTableScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
        );

        mainTabs.addTab("Server", serverPanel);

        newConnectionLbl.setText("IP:");

        newConnectionFilesBtn.setText("Choose Files");
        newConnectionFilesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newConnectionFilesBtnActionPerformed(evt);
            }
        });

        chosenFilesTable.getTableHeader().setReorderingAllowed(false);
        JPopupMenu filesChosenPopupMenu = new JPopupMenu();
        JMenuItem filesChosenMenuItemRemove = new JMenuItem(new AbstractAction("Remove File") {
            public void actionPerformed(ActionEvent e) {
                int selectedFile = chosenFilesTable.getSelectedRow();
                controller.removeFromChosenFiles(selectedFile);
            }
        });
        filesChosenPopupMenu.add(filesChosenMenuItemRemove);
        chosenFilesTable.setComponentPopupMenu(filesChosenPopupMenu);

        chosenFilesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chosenFilesTableMouseReleased(evt);
            }
        });
        newConnectionTableScrollPane.setViewportView(chosenFilesTable);

        newConnectionBtn.setText("Send");
        newConnectionBtn.setEnabled(false);
        newConnectionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newConnectionBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newConnectionPanelLayout = new javax.swing.GroupLayout(newConnectionPanel);
        newConnectionPanel.setLayout(newConnectionPanelLayout);
        newConnectionPanelLayout.setHorizontalGroup(
            newConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newConnectionTableScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(newConnectionPanelLayout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(newConnectionLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newConnectionTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newConnectionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newConnectionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(newConnectionFilesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
        );
        newConnectionPanelLayout.setVerticalGroup(
            newConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newConnectionPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(newConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newConnectionLbl)
                    .addComponent(newConnectionTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newConnectionFilesBtn)
                    .addComponent(newConnectionBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newConnectionTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE))
        );

        connectionTabs.addTab("New Connection", newConnectionPanel);

        sendingTable.setEnabled(false);
        sendingTable.getTableHeader().setReorderingAllowed(false);
        sendingTableScrollPane.setViewportView(sendingTable);

        javax.swing.GroupLayout sendingPanelLayout = new javax.swing.GroupLayout(sendingPanel);
        sendingPanel.setLayout(sendingPanelLayout);
        sendingPanelLayout.setHorizontalGroup(
            sendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sendingTableScrollPane)
        );
        sendingPanelLayout.setVerticalGroup(
            sendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sendingTableScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
        );

        connectionTabs.addTab("Sending", sendingPanel);

        javax.swing.GroupLayout subTabPanelLayout = new javax.swing.GroupLayout(subTabPanel);
        subTabPanel.setLayout(subTabPanelLayout);
        subTabPanelLayout.setHorizontalGroup(
            subTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(connectionTabs)
        );
        subTabPanelLayout.setVerticalGroup(
            subTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(connectionTabs)
        );

        mainTabs.addTab("Connections", subTabPanel);

        popup.setText("File");

        popupItmServer.setText("Start Server");
        popupItmServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popupItmServerActionPerformed(evt);
            }
        });
        popup.add(popupItmServer);
        popup.add(popupSeperator);

        popupItmExit.setText("Exit");
        popup.add(popupItmExit);

        menu.add(popup);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabs)
        );

        setSize(new java.awt.Dimension(500, 522));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    // <editor-fold defaultstate="collapsed" desc=" GUI Event Handling Code ">
    private void newConnectionFilesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newConnectionFilesBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        int result = chooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            controller.addToChosenFiles(chooser.getSelectedFiles());
            newConnectionTxtField.setEnabled(true);
        } 
    }//GEN-LAST:event_newConnectionFilesBtnActionPerformed

    private void chosenFilesTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chosenFilesTableMouseReleased
        Point point = evt.getPoint();
        int currentRow = chosenFilesTable.rowAtPoint(point);
        chosenFilesTable.setRowSelectionInterval(currentRow, currentRow);
    }//GEN-LAST:event_chosenFilesTableMouseReleased

    private void popupItmServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popupItmServerActionPerformed
        if (popupItmServer.getText().equals("Start Server")) {
            JFileChooser f = new JFileChooser();
            f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY); 
            int saveResult = f.showSaveDialog(this);
            if (saveResult == JFileChooser.APPROVE_OPTION) {
                controller.startServer(f.getSelectedFile().toString());
                mainTabs.addTab("Server", serverPanel);
                popupItmServer.setText("Stop Server");
            }
        } else {
            try {
                controller.stopServer();
            } catch (IOException ex) {
                System.out.println(ex);
            }
            int index = mainTabs.indexOfComponent(serverPanel);
            mainTabs.remove(index);
            popupItmServer.setText("Start Server");
        }
    }//GEN-LAST:event_popupItmServerActionPerformed
    private void newConnectionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newConnectionBtnActionPerformed
        controller.newConnection(newConnectionTxtField.getText());
    }//GEN-LAST:event_newConnectionBtnActionPerformed
    private void textDocumentChanged(DocumentEvent evt) {
        Document document = evt.getDocument();
        try {
            Matcher ipMatcher = ipPattern.matcher(document.getText(0, document.getLength()));
            if (ipMatcher.matches()) newConnectionBtn.setEnabled(true);
            else newConnectionBtn.setEnabled(false);
        } catch (BadLocationException ex) {
            System.out.println(ex);
        }
    }
// </editor-fold>
    

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable chosenFilesTable;
    private javax.swing.JTabbedPane connectionTabs;
    private javax.swing.JTabbedPane mainTabs;
    private javax.swing.JMenuBar menu;
    private javax.swing.JButton newConnectionBtn;
    private javax.swing.JButton newConnectionFilesBtn;
    private javax.swing.JLabel newConnectionLbl;
    private javax.swing.JPanel newConnectionPanel;
    private javax.swing.JScrollPane newConnectionTableScrollPane;
    private javax.swing.JFormattedTextField newConnectionTxtField;
    private javax.swing.JMenu popup;
    private javax.swing.JMenuItem popupItmExit;
    private javax.swing.JMenuItem popupItmServer;
    private javax.swing.JPopupMenu.Separator popupSeperator;
    private javax.swing.JPanel sendingPanel;
    private javax.swing.JTable sendingTable;
    private javax.swing.JScrollPane sendingTableScrollPane;
    private javax.swing.JPanel serverPanel;
    private javax.swing.JTable serverTable;
    private javax.swing.JScrollPane serverTableScrollPane;
    private javax.swing.JPanel subTabPanel;
    // End of variables declaration//GEN-END:variables

}
